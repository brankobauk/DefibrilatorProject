@using GridMvc.Html
@model IEnumerable<DefibrilatorProject.Models.Models.Maintenance>
@helper CustomRenderingOfColumn(bool stopMaintenance, DateTime date, int serviceRate)
{
    if (stopMaintenance)
    {
        @:Never
    }
    else
    {
        @date.AddMonths(serviceRate).ToShortDateString();
    }
}
<h2>Items to Service</h2>

@if (Model != null)
{
    @Html.Grid(Model).Columns(columns =>
    {
        columns.Add(c => c.SoldProduct.Company.Name).Titled("Company");
        columns.Add(c => c.SoldProduct.Location).Titled("Location");
        columns.Add(c => c.SoldProduct.Product.Name).Titled("Product");
        columns.Add(c => c.ProductProperty.Name).Titled("ProductProperty");
        columns.Add(c => c.DateOfMainenance).Titled("DateOfMainenance");
        columns.Add(c => c.ProductProperty.StopMaintenance).Titled("NextMaintenanceOn").RenderValueAs(o => CustomRenderingOfColumn(o.ProductProperty.StopMaintenance, o.DateOfMainenance, o.ProductProperty.ServiceRate)).Filterable(true);
    }).WithPaging(10).Sortable(true)
}
else
{
   <div>The List Is Empty!</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/maintenance")
}