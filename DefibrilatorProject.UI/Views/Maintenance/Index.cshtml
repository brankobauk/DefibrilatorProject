@using System.Web.UI.WebControls
@using GridMvc.Html
@model DefibrilatorProject.Models.ViewModels.MaintenanceViewModel

@helper CustomRenderingOfColumn(bool stopMaintenance, DateTime date, int serviceRate)
{
    if (stopMaintenance)
    {
        @:Never
    }
    else
    {
        @date.AddMonths(serviceRate).ToShortDateString();
    }
}
<h2>Index Of Maintenance Items</h2>

<p>
    @Html.ActionLink("Create New Maintenance Item", "Create")
</p>
@Html.DropDownListFor(x => x.CompanyId, Model.Companies)
@Html.DropDownListFor(x => x.ProductId, Model.Products)

@Html.Grid(Model.Maintenances).Columns(columns =>
                    {
                        columns.Add(c => c.SoldProduct.Company.Name).Titled("Company Name");
                        columns.Add(c => c.SoldProduct.Location).Titled("Location");
                        columns.Add(c => c.SoldProduct.Product.Name).Titled("Product Name");
                        columns.Add(c => c.ProductProperty.Name).Titled("PropertyName");
                        columns.Add(c => c.DateOfMainenance).Titled("DateOfMaintenance");
                        columns.Add(c => c.ProductProperty.StopMaintenance).Titled("NextMaintenanceOn").RenderValueAs(o => CustomRenderingOfColumn(o.ProductProperty.StopMaintenance, o.DateOfMainenance, o.ProductProperty.ServiceRate)).Filterable(true);
                        columns.Add().Sanitized(false).Encoded(false).RenderValueAs(o => Html.ActionLink("Edit", "Edit", new { Id = o.MaintenanceId }, null).ToHtmlString());
                    }).WithPaging(10).Sortable(true)

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/maintenance")
}